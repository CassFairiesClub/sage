name: Build
on:
  push:
    branches:
      - main
    tags:
      - '**'

  pull_request:
    branches:
      - '**'

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install PNPM
        uses: pnpm/action-setup@v4

      - name: Install dependencies
        run: pnpm install

      - name: Prettier
        run: pnpm prettier:check

      - name: Install GTK
        run: sudo apt-get install libgtk-3-dev libjavascriptcoregtk-4.1-dev libwebkit2gtk-4.1-dev

      - name: Clippy
        run: cargo clippy --workspace --all-features --all-targets

      - name: Unused dependencies
        run: |
          cargo install cargo-machete --locked
          cargo machete

      - name: Fmt
        run: cargo fmt --all -- --files-with-diff --check

  build:
    name: ${{ matrix.platform_name }}
    runs-on: ${{ matrix.platform }}
    permissions:
      contents: write
    strategy:
      fail-fast: false
      matrix:
        include:
          - platform: 'macos-latest'
            platform_name: MacOS
            build: 'pnpm tauri build --target universal-apple-darwin'
          - platform: 'ubuntu-22.04'
            platform_name: Linux
            build: 'pnpm tauri build'
          - platform: 'windows-latest'
            platform_name: Windows (x64)
            build: 'pnpm tauri build'
          - platform: 'windows-latest'
            platform_name: Windows (ARM)
            build: 'pnpm tauri build --target aarch64-pc-windows-msvc'
          - platform: 'macos-latest'
            platform_name: iOS
            build: 'pnpm tauri ios build --export-method app-store-connect'
            build_dev: 'pnpm tauri ios build --export-method release-testing'
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Add x86_64-apple-darwin
        if: matrix.platform_name == 'MacOS'
        run: rustup target add x86_64-apple-darwin

      - name: Add aarch64-apple-ios
        if: matrix.platform_name == 'iOS'
        run: rustup target add aarch64-apple-ios

      - name: Add aarch64-pc-windows-msvc
        if: matrix.platform_name == 'Windows (ARM)'
        run: rustup target add aarch64-pc-windows-msvc

      - name: Ubuntu dependencies
        if: matrix.platform == 'ubuntu-22.04'
        run: sudo apt-get install -y libgtk-3-dev libjavascriptcoregtk-4.1-dev libwebkit2gtk-4.1-dev

      - name: Windows dependencies
        if: matrix.platform == 'windows-latest'
        run: |
          choco install nasm
          echo "C:\Program Files\NASM" | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8 -Append

      - name: Install pnpm
        uses: pnpm/action-setup@v4

      - name: Frontend dependencies
        run: pnpm install

      - name: Save API key to file
        if: ${{ startsWith(github.event.ref, 'refs/tags/v') && matrix.platform == 'macos-latest' }}
        run: |
          mkdir -p ~/private_keys
          echo -n '${{ secrets.APPLE_API_SECRET_KEY }}' > ~/private_keys/AuthKey_${{ secrets.APPLE_API_KEY_ID }}.p8

      - name: Bindgen CLI
        run: cargo install bindgen-cli --locked

      - name: Notarized build
        if: ${{ startsWith(github.event.ref, 'refs/tags/v') && matrix.platform == 'macos-latest' }}
        run: ${{ matrix.build }}
        env:
          APPLE_CERTIFICATE: ${{ secrets.APPLE_CERTIFICATE }}
          APPLE_CERTIFICATE_PASSWORD: ${{ secrets.APPLE_CERTIFICATE_PASSWORD }}
          APPLE_API_ISSUER: ${{ secrets.APPLE_API_ISSUER }}
          APPLE_API_KEY: ${{ secrets.APPLE_API_KEY_ID }}
          APPLE_API_KEY_PATH: ~/private_keys/AuthKey_${{ secrets.APPLE_API_KEY_ID }}.p8
          CI: true

      - name: Unnotarized build
        if: ${{ !(startsWith(github.event.ref, 'refs/tags/v') && matrix.platform == 'macos-latest') }}
        run: ${{ matrix.build_dev || matrix.build }}
        env:
          CI: true
